/**
 * A 16-bit counter load and reset control bits.
 * if (reset[t] == 1) out [t+1] = 0
 * else if (load[t] == 1) out t[t+1] = in[t]
 *   else if (inc[t] == 1) out t[t+1] = out[t] + 1
 *     else out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    Not(in=reset, out=notReset);
    
    Mux16(a=inInc, b=in, sel=load, out=registerMuxIn);


    Way16And1(a=registerMuxIn,b=notReset, out=inAndNotReset);
    Or(a=resetOrInc, b=load, out=flagsOr);
    
    
    Register(in=inAndNotReset, load=flagsOr, out=outRegister, out=out);
    Inc16(in=outRegister, out=inTmpInc);
    Mux16(a=outRegister, b=inTmpInc, sel=inc, out=inInc);
    
    
    Or(a=reset, b=inc, out=resetOrInc);



 }