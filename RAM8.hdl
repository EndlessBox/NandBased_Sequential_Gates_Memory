// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    

    






 

    // DMux8Way16(in=in, sel=address, a=DMux0, b=DMux1, c=DMux2, d=DMux3, e=DMux4, f=DMux5, g=DMux6, h=DMux7);

    // Register(in=DMux0, load=load, out=OutR0);
    // Register(in=DMux1, load=load, out=OutR1);

    // Register(in=DMux2, load=load, out=OutR2);
    // Register(in=DMux3, load=load, out=OutR3);
    
    // Register(in=DMux4, load=load, out=OutR4);
    // Register(in=DMux5, load=load, out=OutR5);
    
    // Register(in=DMux6, load=load, out=OutR6);
    // Register(in=DMux7, load=load, out=OutR7);

    // Mux8Way16(a=OutR0, b=OutR1, c=OutR2, d=OutR3, e=OutR4, f=OutR5, g=OutR6, h=OutR7, sel=address, out=out);
}